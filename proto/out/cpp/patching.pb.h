// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: patching.proto

#ifndef PROTOBUF_patching_2eproto__INCLUDED
#define PROTOBUF_patching_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace com {
namespace obsessiveorange {
namespace opxform {
class Diff;
class DiffDefaultTypeInternal;
extern DiffDefaultTypeInternal _Diff_default_instance_;
class Patch;
class PatchDefaultTypeInternal;
extern PatchDefaultTypeInternal _Patch_default_instance_;
}  // namespace opxform
}  // namespace obsessiveorange
}  // namespace com

namespace com {
namespace obsessiveorange {
namespace opxform {

namespace protobuf_patching_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_patching_2eproto

// ===================================================================

class Patch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.obsessiveorange.opxform.Patch) */ {
 public:
  Patch();
  virtual ~Patch();

  Patch(const Patch& from);

  inline Patch& operator=(const Patch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Patch(Patch&& from) noexcept
    : Patch() {
    *this = ::std::move(from);
  }

  inline Patch& operator=(Patch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Patch& default_instance();

  static inline const Patch* internal_default_instance() {
    return reinterpret_cast<const Patch*>(
               &_Patch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Patch* other);
  friend void swap(Patch& a, Patch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Patch* New() const PROTOBUF_FINAL { return New(NULL); }

  Patch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Patch& from);
  void MergeFrom(const Patch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Patch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.obsessiveorange.opxform.Diff diffs = 3;
  int diffs_size() const;
  void clear_diffs();
  static const int kDiffsFieldNumber = 3;
  const ::com::obsessiveorange::opxform::Diff& diffs(int index) const;
  ::com::obsessiveorange::opxform::Diff* mutable_diffs(int index);
  ::com::obsessiveorange::opxform::Diff* add_diffs();
  ::google::protobuf::RepeatedPtrField< ::com::obsessiveorange::opxform::Diff >*
      mutable_diffs();
  const ::google::protobuf::RepeatedPtrField< ::com::obsessiveorange::opxform::Diff >&
      diffs() const;

  // int64 baseVersion = 1;
  void clear_baseversion();
  static const int kBaseVersionFieldNumber = 1;
  ::google::protobuf::int64 baseversion() const;
  void set_baseversion(::google::protobuf::int64 value);

  // int64 baseDocLength = 2;
  void clear_basedoclength();
  static const int kBaseDocLengthFieldNumber = 2;
  ::google::protobuf::int64 basedoclength() const;
  void set_basedoclength(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.obsessiveorange.opxform.Patch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::obsessiveorange::opxform::Diff > diffs_;
  ::google::protobuf::int64 baseversion_;
  ::google::protobuf::int64 basedoclength_;
  mutable int _cached_size_;
  friend struct protobuf_patching_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Diff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.obsessiveorange.opxform.Diff) */ {
 public:
  Diff();
  virtual ~Diff();

  Diff(const Diff& from);

  inline Diff& operator=(const Diff& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Diff(Diff&& from) noexcept
    : Diff() {
    *this = ::std::move(from);
  }

  inline Diff& operator=(Diff&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Diff& default_instance();

  static inline const Diff* internal_default_instance() {
    return reinterpret_cast<const Diff*>(
               &_Diff_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Diff* other);
  friend void swap(Diff& a, Diff& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Diff* New() const PROTOBUF_FINAL { return New(NULL); }

  Diff* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Diff& from);
  void MergeFrom(const Diff& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Diff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string modification = 4;
  void clear_modification();
  static const int kModificationFieldNumber = 4;
  const ::std::string& modification() const;
  void set_modification(const ::std::string& value);
  #if LANG_CXX11
  void set_modification(::std::string&& value);
  #endif
  void set_modification(const char* value);
  void set_modification(const char* value, size_t size);
  ::std::string* mutable_modification();
  ::std::string* release_modification();
  void set_allocated_modification(::std::string* modification);

  // int64 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int64 index() const;
  void set_index(::google::protobuf::int64 value);

  // int64 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // bool isInsertion = 2;
  void clear_isinsertion();
  static const int kIsInsertionFieldNumber = 2;
  bool isinsertion() const;
  void set_isinsertion(bool value);

  // @@protoc_insertion_point(class_scope:com.obsessiveorange.opxform.Diff)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr modification_;
  ::google::protobuf::int64 index_;
  ::google::protobuf::int64 count_;
  bool isinsertion_;
  mutable int _cached_size_;
  friend struct protobuf_patching_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Patch

// int64 baseVersion = 1;
inline void Patch::clear_baseversion() {
  baseversion_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Patch::baseversion() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Patch.baseVersion)
  return baseversion_;
}
inline void Patch::set_baseversion(::google::protobuf::int64 value) {
  
  baseversion_ = value;
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Patch.baseVersion)
}

// int64 baseDocLength = 2;
inline void Patch::clear_basedoclength() {
  basedoclength_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Patch::basedoclength() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Patch.baseDocLength)
  return basedoclength_;
}
inline void Patch::set_basedoclength(::google::protobuf::int64 value) {
  
  basedoclength_ = value;
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Patch.baseDocLength)
}

// repeated .com.obsessiveorange.opxform.Diff diffs = 3;
inline int Patch::diffs_size() const {
  return diffs_.size();
}
inline void Patch::clear_diffs() {
  diffs_.Clear();
}
inline const ::com::obsessiveorange::opxform::Diff& Patch::diffs(int index) const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Patch.diffs)
  return diffs_.Get(index);
}
inline ::com::obsessiveorange::opxform::Diff* Patch::mutable_diffs(int index) {
  // @@protoc_insertion_point(field_mutable:com.obsessiveorange.opxform.Patch.diffs)
  return diffs_.Mutable(index);
}
inline ::com::obsessiveorange::opxform::Diff* Patch::add_diffs() {
  // @@protoc_insertion_point(field_add:com.obsessiveorange.opxform.Patch.diffs)
  return diffs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::obsessiveorange::opxform::Diff >*
Patch::mutable_diffs() {
  // @@protoc_insertion_point(field_mutable_list:com.obsessiveorange.opxform.Patch.diffs)
  return &diffs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::obsessiveorange::opxform::Diff >&
Patch::diffs() const {
  // @@protoc_insertion_point(field_list:com.obsessiveorange.opxform.Patch.diffs)
  return diffs_;
}

// -------------------------------------------------------------------

// Diff

// int64 index = 1;
inline void Diff::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Diff::index() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Diff.index)
  return index_;
}
inline void Diff::set_index(::google::protobuf::int64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Diff.index)
}

// bool isInsertion = 2;
inline void Diff::clear_isinsertion() {
  isinsertion_ = false;
}
inline bool Diff::isinsertion() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Diff.isInsertion)
  return isinsertion_;
}
inline void Diff::set_isinsertion(bool value) {
  
  isinsertion_ = value;
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Diff.isInsertion)
}

// int64 count = 3;
inline void Diff::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Diff::count() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Diff.count)
  return count_;
}
inline void Diff::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Diff.count)
}

// string modification = 4;
inline void Diff::clear_modification() {
  modification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Diff::modification() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Diff.modification)
  return modification_.GetNoArena();
}
inline void Diff::set_modification(const ::std::string& value) {
  
  modification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Diff.modification)
}
#if LANG_CXX11
inline void Diff::set_modification(::std::string&& value) {
  
  modification_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.obsessiveorange.opxform.Diff.modification)
}
#endif
inline void Diff::set_modification(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  modification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.obsessiveorange.opxform.Diff.modification)
}
inline void Diff::set_modification(const char* value, size_t size) {
  
  modification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.obsessiveorange.opxform.Diff.modification)
}
inline ::std::string* Diff::mutable_modification() {
  
  // @@protoc_insertion_point(field_mutable:com.obsessiveorange.opxform.Diff.modification)
  return modification_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Diff::release_modification() {
  // @@protoc_insertion_point(field_release:com.obsessiveorange.opxform.Diff.modification)
  
  return modification_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Diff::set_allocated_modification(::std::string* modification) {
  if (modification != NULL) {
    
  } else {
    
  }
  modification_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modification);
  // @@protoc_insertion_point(field_set_allocated:com.obsessiveorange.opxform.Diff.modification)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace opxform
}  // namespace obsessiveorange
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_patching_2eproto__INCLUDED
