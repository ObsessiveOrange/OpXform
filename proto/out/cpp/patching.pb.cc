// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: patching.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "patching.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace obsessiveorange {
namespace opxform {
class PatchDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Patch>
     _instance;
} _Patch_default_instance_;
class DiffDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Diff>
     _instance;
} _Diff_default_instance_;

namespace protobuf_patching_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Patch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Patch, baseversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Patch, basedoclength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Patch, diffs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Diff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Diff, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Diff, isinsertion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Diff, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Diff, modification_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Patch)},
  { 8, -1, sizeof(Diff)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Patch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Diff_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "patching.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Patch_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Patch_default_instance_);_Diff_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Diff_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016patching.proto\022\033com.obsessiveorange.op"
      "xform\"e\n\005Patch\022\023\n\013baseVersion\030\001 \001(\003\022\025\n\rb"
      "aseDocLength\030\002 \001(\003\0220\n\005diffs\030\003 \003(\0132!.com."
      "obsessiveorange.opxform.Diff\"O\n\004Diff\022\r\n\005"
      "index\030\001 \001(\003\022\023\n\013isInsertion\030\002 \001(\010\022\r\n\005coun"
      "t\030\003 \001(\003\022\024\n\014modification\030\004 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 237);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "patching.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_patching_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Patch::kBaseVersionFieldNumber;
const int Patch::kBaseDocLengthFieldNumber;
const int Patch::kDiffsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Patch::Patch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_patching_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.obsessiveorange.opxform.Patch)
}
Patch::Patch(const Patch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      diffs_(from.diffs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&baseversion_, &from.baseversion_,
    static_cast<size_t>(reinterpret_cast<char*>(&basedoclength_) -
    reinterpret_cast<char*>(&baseversion_)) + sizeof(basedoclength_));
  // @@protoc_insertion_point(copy_constructor:com.obsessiveorange.opxform.Patch)
}

void Patch::SharedCtor() {
  ::memset(&baseversion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&basedoclength_) -
      reinterpret_cast<char*>(&baseversion_)) + sizeof(basedoclength_));
  _cached_size_ = 0;
}

Patch::~Patch() {
  // @@protoc_insertion_point(destructor:com.obsessiveorange.opxform.Patch)
  SharedDtor();
}

void Patch::SharedDtor() {
}

void Patch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Patch::descriptor() {
  protobuf_patching_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_patching_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Patch& Patch::default_instance() {
  protobuf_patching_2eproto::InitDefaults();
  return *internal_default_instance();
}

Patch* Patch::New(::google::protobuf::Arena* arena) const {
  Patch* n = new Patch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Patch::Clear() {
// @@protoc_insertion_point(message_clear_start:com.obsessiveorange.opxform.Patch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  diffs_.Clear();
  ::memset(&baseversion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&basedoclength_) -
      reinterpret_cast<char*>(&baseversion_)) + sizeof(basedoclength_));
  _internal_metadata_.Clear();
}

bool Patch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.obsessiveorange.opxform.Patch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 baseVersion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &baseversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 baseDocLength = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &basedoclength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.obsessiveorange.opxform.Diff diffs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_diffs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.obsessiveorange.opxform.Patch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.obsessiveorange.opxform.Patch)
  return false;
#undef DO_
}

void Patch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.obsessiveorange.opxform.Patch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 baseVersion = 1;
  if (this->baseversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->baseversion(), output);
  }

  // int64 baseDocLength = 2;
  if (this->basedoclength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->basedoclength(), output);
  }

  // repeated .com.obsessiveorange.opxform.Diff diffs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->diffs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->diffs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.obsessiveorange.opxform.Patch)
}

::google::protobuf::uint8* Patch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.obsessiveorange.opxform.Patch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 baseVersion = 1;
  if (this->baseversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->baseversion(), target);
  }

  // int64 baseDocLength = 2;
  if (this->basedoclength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->basedoclength(), target);
  }

  // repeated .com.obsessiveorange.opxform.Diff diffs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->diffs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->diffs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.obsessiveorange.opxform.Patch)
  return target;
}

size_t Patch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.obsessiveorange.opxform.Patch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .com.obsessiveorange.opxform.Diff diffs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->diffs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->diffs(static_cast<int>(i)));
    }
  }

  // int64 baseVersion = 1;
  if (this->baseversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->baseversion());
  }

  // int64 baseDocLength = 2;
  if (this->basedoclength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->basedoclength());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Patch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.obsessiveorange.opxform.Patch)
  GOOGLE_DCHECK_NE(&from, this);
  const Patch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Patch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.obsessiveorange.opxform.Patch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.obsessiveorange.opxform.Patch)
    MergeFrom(*source);
  }
}

void Patch::MergeFrom(const Patch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.obsessiveorange.opxform.Patch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  diffs_.MergeFrom(from.diffs_);
  if (from.baseversion() != 0) {
    set_baseversion(from.baseversion());
  }
  if (from.basedoclength() != 0) {
    set_basedoclength(from.basedoclength());
  }
}

void Patch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.obsessiveorange.opxform.Patch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Patch::CopyFrom(const Patch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.obsessiveorange.opxform.Patch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Patch::IsInitialized() const {
  return true;
}

void Patch::Swap(Patch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Patch::InternalSwap(Patch* other) {
  using std::swap;
  diffs_.InternalSwap(&other->diffs_);
  swap(baseversion_, other->baseversion_);
  swap(basedoclength_, other->basedoclength_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Patch::GetMetadata() const {
  protobuf_patching_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_patching_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Patch

// int64 baseVersion = 1;
void Patch::clear_baseversion() {
  baseversion_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Patch::baseversion() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Patch.baseVersion)
  return baseversion_;
}
void Patch::set_baseversion(::google::protobuf::int64 value) {
  
  baseversion_ = value;
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Patch.baseVersion)
}

// int64 baseDocLength = 2;
void Patch::clear_basedoclength() {
  basedoclength_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Patch::basedoclength() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Patch.baseDocLength)
  return basedoclength_;
}
void Patch::set_basedoclength(::google::protobuf::int64 value) {
  
  basedoclength_ = value;
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Patch.baseDocLength)
}

// repeated .com.obsessiveorange.opxform.Diff diffs = 3;
int Patch::diffs_size() const {
  return diffs_.size();
}
void Patch::clear_diffs() {
  diffs_.Clear();
}
const ::com::obsessiveorange::opxform::Diff& Patch::diffs(int index) const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Patch.diffs)
  return diffs_.Get(index);
}
::com::obsessiveorange::opxform::Diff* Patch::mutable_diffs(int index) {
  // @@protoc_insertion_point(field_mutable:com.obsessiveorange.opxform.Patch.diffs)
  return diffs_.Mutable(index);
}
::com::obsessiveorange::opxform::Diff* Patch::add_diffs() {
  // @@protoc_insertion_point(field_add:com.obsessiveorange.opxform.Patch.diffs)
  return diffs_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::obsessiveorange::opxform::Diff >*
Patch::mutable_diffs() {
  // @@protoc_insertion_point(field_mutable_list:com.obsessiveorange.opxform.Patch.diffs)
  return &diffs_;
}
const ::google::protobuf::RepeatedPtrField< ::com::obsessiveorange::opxform::Diff >&
Patch::diffs() const {
  // @@protoc_insertion_point(field_list:com.obsessiveorange.opxform.Patch.diffs)
  return diffs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Diff::kIndexFieldNumber;
const int Diff::kIsInsertionFieldNumber;
const int Diff::kCountFieldNumber;
const int Diff::kModificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Diff::Diff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_patching_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.obsessiveorange.opxform.Diff)
}
Diff::Diff(const Diff& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  modification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modification().size() > 0) {
    modification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modification_);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&isinsertion_) -
    reinterpret_cast<char*>(&index_)) + sizeof(isinsertion_));
  // @@protoc_insertion_point(copy_constructor:com.obsessiveorange.opxform.Diff)
}

void Diff::SharedCtor() {
  modification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isinsertion_) -
      reinterpret_cast<char*>(&index_)) + sizeof(isinsertion_));
  _cached_size_ = 0;
}

Diff::~Diff() {
  // @@protoc_insertion_point(destructor:com.obsessiveorange.opxform.Diff)
  SharedDtor();
}

void Diff::SharedDtor() {
  modification_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Diff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Diff::descriptor() {
  protobuf_patching_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_patching_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Diff& Diff::default_instance() {
  protobuf_patching_2eproto::InitDefaults();
  return *internal_default_instance();
}

Diff* Diff::New(::google::protobuf::Arena* arena) const {
  Diff* n = new Diff;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Diff::Clear() {
// @@protoc_insertion_point(message_clear_start:com.obsessiveorange.opxform.Diff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isinsertion_) -
      reinterpret_cast<char*>(&index_)) + sizeof(isinsertion_));
  _internal_metadata_.Clear();
}

bool Diff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.obsessiveorange.opxform.Diff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isInsertion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isinsertion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string modification = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modification()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modification().data(), static_cast<int>(this->modification().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.obsessiveorange.opxform.Diff.modification"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.obsessiveorange.opxform.Diff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.obsessiveorange.opxform.Diff)
  return false;
#undef DO_
}

void Diff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.obsessiveorange.opxform.Diff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->index(), output);
  }

  // bool isInsertion = 2;
  if (this->isinsertion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isinsertion(), output);
  }

  // int64 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->count(), output);
  }

  // string modification = 4;
  if (this->modification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modification().data(), static_cast<int>(this->modification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.obsessiveorange.opxform.Diff.modification");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->modification(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.obsessiveorange.opxform.Diff)
}

::google::protobuf::uint8* Diff::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.obsessiveorange.opxform.Diff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->index(), target);
  }

  // bool isInsertion = 2;
  if (this->isinsertion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isinsertion(), target);
  }

  // int64 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->count(), target);
  }

  // string modification = 4;
  if (this->modification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modification().data(), static_cast<int>(this->modification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.obsessiveorange.opxform.Diff.modification");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->modification(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.obsessiveorange.opxform.Diff)
  return target;
}

size_t Diff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.obsessiveorange.opxform.Diff)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string modification = 4;
  if (this->modification().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modification());
  }

  // int64 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  // int64 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // bool isInsertion = 2;
  if (this->isinsertion() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Diff::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.obsessiveorange.opxform.Diff)
  GOOGLE_DCHECK_NE(&from, this);
  const Diff* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Diff>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.obsessiveorange.opxform.Diff)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.obsessiveorange.opxform.Diff)
    MergeFrom(*source);
  }
}

void Diff::MergeFrom(const Diff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.obsessiveorange.opxform.Diff)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.modification().size() > 0) {

    modification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modification_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.isinsertion() != 0) {
    set_isinsertion(from.isinsertion());
  }
}

void Diff::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.obsessiveorange.opxform.Diff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Diff::CopyFrom(const Diff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.obsessiveorange.opxform.Diff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Diff::IsInitialized() const {
  return true;
}

void Diff::Swap(Diff* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Diff::InternalSwap(Diff* other) {
  using std::swap;
  modification_.Swap(&other->modification_);
  swap(index_, other->index_);
  swap(count_, other->count_);
  swap(isinsertion_, other->isinsertion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Diff::GetMetadata() const {
  protobuf_patching_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_patching_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Diff

// int64 index = 1;
void Diff::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Diff::index() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Diff.index)
  return index_;
}
void Diff::set_index(::google::protobuf::int64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Diff.index)
}

// bool isInsertion = 2;
void Diff::clear_isinsertion() {
  isinsertion_ = false;
}
bool Diff::isinsertion() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Diff.isInsertion)
  return isinsertion_;
}
void Diff::set_isinsertion(bool value) {
  
  isinsertion_ = value;
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Diff.isInsertion)
}

// int64 count = 3;
void Diff::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Diff::count() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Diff.count)
  return count_;
}
void Diff::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Diff.count)
}

// string modification = 4;
void Diff::clear_modification() {
  modification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Diff::modification() const {
  // @@protoc_insertion_point(field_get:com.obsessiveorange.opxform.Diff.modification)
  return modification_.GetNoArena();
}
void Diff::set_modification(const ::std::string& value) {
  
  modification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.obsessiveorange.opxform.Diff.modification)
}
#if LANG_CXX11
void Diff::set_modification(::std::string&& value) {
  
  modification_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.obsessiveorange.opxform.Diff.modification)
}
#endif
void Diff::set_modification(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  modification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.obsessiveorange.opxform.Diff.modification)
}
void Diff::set_modification(const char* value, size_t size) {
  
  modification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.obsessiveorange.opxform.Diff.modification)
}
::std::string* Diff::mutable_modification() {
  
  // @@protoc_insertion_point(field_mutable:com.obsessiveorange.opxform.Diff.modification)
  return modification_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Diff::release_modification() {
  // @@protoc_insertion_point(field_release:com.obsessiveorange.opxform.Diff.modification)
  
  return modification_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Diff::set_allocated_modification(::std::string* modification) {
  if (modification != NULL) {
    
  } else {
    
  }
  modification_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modification);
  // @@protoc_insertion_point(field_set_allocated:com.obsessiveorange.opxform.Diff.modification)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace opxform
}  // namespace obsessiveorange
}  // namespace com

// @@protoc_insertion_point(global_scope)
